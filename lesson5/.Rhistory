data <- data %>%
mutate(user_group = ifelse(contacted == 0, 'control',
ifelse(coupon == 0, 'non_coupon',
'coupon')),
week = floor(days_from_call/7)) %>%
group_by(week, User_GK, user_group, rfm) %>%
summarise(Number_of_PP_weekly = sum(Number_of_PP)) %>%
group_by(week, rfm) %>%
summarise(control = mean(ifelse(user_group == 'control', Number_of_PP_weekly, NA), na.rm = TRUE),
coupon = mean(ifelse(user_group == 'coupon', Number_of_PP_weekly, NA), na.rm = TRUE),
no_coupon = mean(ifelse(user_group == 'non_coupon', Number_of_PP_weekly, NA), na.rm = TRUE))
View(data)
write.csv(data, "high_rfm_call.csv")
View(data)
data %>% filter(week >= 0) %>% mean()
data %>% filter(week >= 0) %>% summarise(mean_control = mean(control),
mean_coupon = mean(coupon),
mean_no_coupon = mean(no_coupon))
data %>% filter(week >= 0) %>% summarise()
data %>% filter(week >= 0) %>% summarise(control)
data %>% filter(week >= 0) %>% summarise(control)
data <- read_csv("high_rfm_calls.csv")
data <- data %>%
mutate(user_group = ifelse(contacted == 0, 'control',
ifelse(coupon == 0, 'non_coupon',
'coupon')),
week = floor(days_from_call/7)) %>%
group_by(week, User_GK, user_group, rfm) %>%
summarise(Number_of_PP_weekly = sum(Number_of_PP)) %>%
group_by(week, rfm) %>%
summarise(control = mean(ifelse(user_group == 'control', Number_of_PP_weekly, NA), na.rm = TRUE),
coupon = mean(ifelse(user_group == 'coupon', Number_of_PP_weekly, NA), na.rm = TRUE),
no_coupon = mean(ifelse(user_group == 'non_coupon', Number_of_PP_weekly, NA), na.rm = TRUE))
data %>% filter(week >= 0) %>% summarise(control)
getwd()
setwd("/Users/Kharitonov/Desktop/udacity_r/lesson4")
list.files()
pf <- read_tsv("/Users/Kharitonov/Desktop/udacity_r/lesson4/pseudo_facebook.tsv")
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
View(pf.fc_by_age_gender)
pf <- read_tsv("/Users/Kharitonov/Desktop/udacity_r/lesson4/pseudo_facebook.tsv")
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
ggplot(pf.fc_by_age_gender, aes(x = age, y = median_friend_count), color = gender) +
geom_line()
ggplot(pf.fc_by_age_gender, aes(x = age, y = median_friend_count, color = gender)) +
geom_line()
install.packages('reshape2')
library(reshape2)
library(tidyr)
View(pf.fc_by_age_gender)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender, value.var = "median_friend_count")
View(pf.fc_by_age_gender.wide)
ggplot(pf.fc_by_age_gender.wide, aes(y = female/male, x = age)) + geom_line() +
geom_hline(yintercept = 1)
ggplot(pf.fc_by_age_gender.wide, aes(y = female/male, x = age)) + geom_line() +
geom_hline(yintercept = 1, aes(linetype = "dashed"))
ggplot(pf.fc_by_age_gender.wide, aes(y = female/male, x = age)) + geom_line() +
geom_hline(yintercept = 1, linetype = "dashed")
ggplot(pf.fc_by_age_gender.wide, aes(y = female/male, x = age)) + geom_line() +
geom_hline(yintercept = 1, linetype = "dashed", color = "red")
View(pf)
pf$year_joined <- 2014 + tenure/365
pf$year_joined <- 2014 + pf$tenure/365
pf$year_joined <- 2014 + floor(pf$tenure/365)
pf$year_joined <- 2014 + round(pf$tenure/365)
pf$year_joined <- 2014 - ceiling(pf$tenure/365)
data <- read_csv("high_rfm_calls.csv")
data <- data %>%
mutate(user_group = ifelse(contacted == 0, 'control',
ifelse(coupon == 0, 'non_coupon',
'coupon')),
week = floor(days_from_call/7)) %>%
group_by(week, User_GK, user_group, rfm) %>%
summarise(Number_of_PP_weekly = sum(Number_of_PP)) %>%
group_by(week, rfm) %>%
summarise(control = mean(ifelse(user_group == 'control', Number_of_PP_weekly, NA), na.rm = TRUE),
coupon = mean(ifelse(user_group == 'coupon', Number_of_PP_weekly, NA), na.rm = TRUE),
no_coupon = mean(ifelse(user_group == 'non_coupon', Number_of_PP_weekly, NA), na.rm = TRUE))
View(data)
data <- read_csv("high_rfm_calls.csv")
View(data)
data <- data %>%
mutate(user_group = ifelse(contacted == 0, 'control',
ifelse(coupon == 0, 'non_coupon',
'coupon')),
week = floor(days_from_call/7)) %>%
group_by(week, User_GK, user_group, rfm) %>%
summarise(Number_of_PP_weekly = sum(Number_of_PP)) %>%
group_by(week, rfm) %>%
summarise(control = mean(ifelse(user_group == 'control', Number_of_PP_weekly, NA), na.rm = TRUE),
coupon = mean(ifelse(user_group == 'coupon', Number_of_PP_weekly, NA), na.rm = TRUE),
no_coupon = mean(ifelse(user_group == 'non_coupon', Number_of_PP_weekly, NA), na.rm = TRUE))
View(data)
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group')
data <- read_csv("high_rfm_calls.csv")
data <- data %>%
mutate(user_group = ifelse(contacted == 0, 'Control',
ifelse(coupon == 0, 'Non Coupon',
'Coupon')),
week = floor(days_from_call/7)) %>%
group_by(week, User_GK, user_group, rfm) %>%
summarise(Number_of_PP_weekly = sum(Number_of_PP)) %>%
group_by(week, rfm, user_group) %>%
summarise(avg_rides = mean(Number_of_PP_weekly))
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group')
ggplot(data %>% filter(rfm == 2), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Gold Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group')
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group')
ggplot(data %>% filter(rfm == 2), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Gold Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group')
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group')
ggplot(data %>% filter(rfm == 2), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Gold Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group')
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-3,4))
data <- read_csv("high_rfm_calls.csv")
View(data)
data <- read_csv("high_rfm_calls.csv")
data <- data %>%
mutate(user_group = ifelse(contacted == 0, 'Control', 'Treat'),
week = floor(days_from_call/7)) %>%
group_by(week, User_GK, user_group, rfm, call_date) %>%
summarise(Number_of_PP_weekly = sum(Number_of_PP)) %>%
group_by(week, rfm, user_group, call_date) %>%
summarise(avg_rides = mean(Number_of_PP_weekly))
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4)) +
facet_wrap(~call_date)
ggplot(data %>% filter(rfm == 2), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Gold Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4)) +
facet_wrap(~call_date)
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4)) +
facet_wrap(~call_date)
data <- read_csv("high_rfm_calls.csv")
data <- filter(data, call_date == '2017-01-18' | call_date == '2017-01-25' |
call_date == '2017-02-01' | call_date == '2017-02-08' |)
data <- filter(data, call_date == '2017-01-18' | call_date == '2017-01-25' |
call_date == '2017-02-01' | call_date == '2017-02-08' )
data <- data %>%
mutate(user_group = ifelse(contacted == 0, 'Control', 'Treat'),
week = floor(days_from_call/7)) %>%
group_by(week, User_GK, user_group, rfm) %>%
summarise(Number_of_PP_weekly = sum(Number_of_PP)) %>%
group_by(week, rfm, user_group) %>%
summarise(avg_rides = mean(Number_of_PP_weekly))
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4))
ggplot(data %>% filter(rfm == 2), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Gold Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4))
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4))
View(data)
ggplot(data %>% filter(rfm == 2), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Gold Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4))
ggplot(data %>% filter(rfm == 1), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Platinum Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4))
ggplot(data %>% filter(rfm == 2), aes(x = week, y = avg_rides, color = user_group)) + labs(title="Gold Users") +
geom_line() + ylab("Average # of rides per week per user") + xlab("Week # from call") +
scale_colour_manual(values=c('red', 'blue', 'green')) +
theme(legend.title = element_text(colour="Black", size=16, face="bold")) +
labs(color='User Group') +
coord_cartesian(xlim = c(-2,4))
View(pf)
year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014))
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014))
ggplot(pf.fc_by_age_gender, aes(x = age, y = median_friend_count, color = year_joined.bucket)) +
geom_line()
library(ggplot2)
ggplot(pf.fc_by_age_gender, aes(x = age, y = median_friend_count, color = year_joined.bucket)) +
geom_line()
ggplot(pf.fc_by_age_gender, aes(x = age, y = median_friend_count, color = year_joined.bucket)) +
geom_line(fun.y = median)
ggplot(pf, aes(x = age, y = friend_count, color = year_joined.bucket)) +
geom_line(fun.y = median)
ggplot(pf, aes(x = age, y = friend_count, color = year_joined.bucket)) +
geom_line(fun.y = median)
ggplot(pf, aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary")
ggplot(pf, aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = mean, stat = "summary")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary") +
geom_line(aes(x = age, y = friend_count), fun.y = mean, linetype = "dashed")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary") +
geom_line(aes(x = age, y = mean_friend_count), fun.y = mean, linetype = "dashed")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary") +
geom_line(fun.y = mean, linetype = "dashed")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary") +
geom_line(aes(x = age, y = mean(friend_count)), fun.y = mean, linetype = "dashed")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary") +
geom_line(aes(x = age, y = mean(friend_count)), linetype = "dashed")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary") +
geom_line(aes(x = age, y = friend_count), fun.y = mean, linetype = "dashed")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = median, stat = "summary") +
geom_line(fun.y = mean, linetype = "dashed", stat = "summary")
ggplot(subset(pf, !is.na(year_joined.bucket)), aes(x = age, y = friend_count)) +
geom_line(aes(color = year_joined.bucket),fun.y = mean, stat = "summary") +
geom_line(fun.y = mean, linetype = "dashed", stat = "summary")
View(pf)
pf$friending_rate <- pf %>% filter(tenure > 0) %>%  mutate(friending_rate = friend_count/tenure)
library(dplyr)
pf$friending_rate <- pf %>% filter(tenure > 0) %>%  mutate(friending_rate = friend_count/tenure)
pf_friends <- pf %>% filter(tenure > 0) %>%  mutate(friending_rate = friend_count/tenure)
mean(pf_friends$friending_rate)
median(pf_friends$friending_rate)
max(pf_friends$friending_rate)
pf_friends <- pf_friends %>% mutate(friendshipping_rate = friendships_initiated/tenure)
ggplot(pf_friends, aes(x = tenure, y = friendshipping_rate)) +
geom_line(aes(color = year_joined.bucket), fun.y = mean, stat = "sumary")
ggplot(pf_friends, aes(x = tenure, y = friendshipping_rate)) +
geom_line(aes(color = year_joined.bucket), fun.y = mean)
ggplot(pf_friends, aes(x = tenure, y = friendshipping_rate)) +
geom_smooth(aes(color = year_joined.bucket), fun.y = mean)
yo <- read.csv("yogurt.csv")
View(yo)
yo$id <- factor(yo$id)
View(yo)
ggplot(yo, aes(x = price)) + geom_histogram()
ggplot(yo, aes(x = price)) + geom_histogram(binwidth = 10)
View(yo)
yo <- yo %>% mutate(all.purchases = strawberry + blueberry + pina.colada + plain)
yo <- yo %>% mutate(all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
ggplot(yo, aes(x = time, y = price)) + geom_point()
ggplot(yo, aes(x = time, y = price)) + geom_point(alpha = 0.5)
ggplot(yo, aes(x = time, y = price)) + geom_point(alpha = 0.3)
ggplot(yo, aes(x = time, y = price)) + geom_point(alpha = 0.1)
ggplot(yo, aes(x = time, y = price)) + geom_point(alpha = 0.05)
sample_id <- sample_n(levels(yo$id), replace = FALSE)
sample_id <- sample(levels(yo$id), replace = FALSE)
ggplot(yo, aes(x = time, y = price)) +
facet_wrap(~id) +
geom_line() +
geom_point(size = all.purchases)
ggplot(yo, aes(x = time, y = price)) +
facet_wrap(~id) +
geom_line() +
geom_point(size = yo$all.purchases)
ggplot(subset(yo, id $in$ sample_id), aes(x = time, y = price)) +
ggplot(subset(yo, id %in% sample_id), aes(x = time, y = price)) +
facet_wrap(~id) +
geom_line() +
geom_point(size = yo$all.purchases)
sample_id <- sample(levels(yo$id),18, replace = FALSE)
ggplot(subset(yo, id %in% sample_id), aes(x = time, y = price)) +
facet_wrap(~id) +
geom_line() +
geom_point(size = yo$all.purchases)
ggplot(subset(yo, id %in% sample_id), aes(x = time, y = price)) +
facet_wrap(~id) +
geom_line() +
geom_point(size = yo$all.purchases)
sample_id <- sample(levels(yo$id),18, replace = FALSE)
set.seed(1313)
sample_id <- sample(levels(yo$id),18, replace = FALSE)
ggplot(subset(yo, id %in% sample_id), aes(x = time, y = price)) +
facet_wrap(~id) +
geom_line() +
geom_point(size = yo$all.purchases)
pf_subset <- pf[, c(2:15)]
set.seed(1010)
pf_subset <- pf[, c(2:15)]
ggpairs(pf_subsetp[sample.int(nrow(pf_subset), 1000),] )
install.packages("GGally")
library(GGally)
ggpairs(pf_subsetp[sample.int(nrow(pf_subset), 1000),] )
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),] )
cor.test(pf_subset$friendships_initiated, pf_subset$friend_count)
cor.test(pf_subset$age, pf_subset$mobile_likes)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000),] )
set.seed(1836)
pf_subset <- pf[, c(2:15)]
cor.test(pf_subset$friendships_initiated, pf_subset$friend_count)
cor.test(pf_subset$age, pf_subset$mobile_likes)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000), -1] )
ggpairs(pf_subset[sample.int(nrow(pf), 1000), -1] )
ggpairs(pf_subset[sample.int(nrow(pf), 1000), -1] )
set.seed(1836)
pf_subset <- pf[, c(2:15)]
ggpairs(pf_subset[sample.int(nrow(pf), 1000), -1] )
View(pf_subset)
set.seed(1836)
pf_subset <- pf_subset[sample.int(nrow(pf), 1000), -1]
cor.test(pf_subset$age, pf_subset$mobile_likes)
pf_subset <- pf[sample.int(nrow(pf), 1000), -1]
pf_subset <- pf[sample.int(nrow(pf), 1000), -1]
pf_subset <- pf[sample.int(nrow(pf), 1000), -1]
set.seed(1836)
pf_subset <- pf[sample.int(nrow(pf), 1000), -1]
pf_subset <- pf[sample.int(nrow(pf), 1000),]
cor.test(pf_subset$age, pf_subset$mobile_likes)
set.seed(1836)
pf_subset <- pf[sample.int(nrow(pf), 1000),]
cor.test(pf_subset$friendships_initiated, pf_subset$friend_count)
cor.test(pf_subset$age, pf_subset$mobile_likes)
library(ggplot2movies)
library(ggplot2)
library(reshape2)
library(dplyr)
library(readr)
library(ggplot2)
library(reshape2)
data(diamonds)
ggplot(diamonds, aes(x = price, color = cut)) +
geom_histogram() +
scale_fill_brewer(type = "qual") +
facet_wrap(~color)
View(diamonds)
ggplot(diamonds, aes(x = price, y = table, color = cut)) +
geom_point() +
scale_fill_brewer(type = "qual")
ggplot(diamonds, aes(y = price, x = table, color = cut)) +
geom_point() +
scale_fill_brewer(type = "qual")
ggplot(diamonds, aes(y = price, x = table)) +
geom_point() +
scale_fill_brewer(type = "qual") +
facet_wrap(~cut)
ggplot(diamonds, aes(y = price, x = table)) +
geom_point(alpha = 0.1) +
scale_fill_brewer(type = "qual") +
facet_wrap(~cut)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(subset(diamonds, quantile(volume, 0.99)), aes(y = price, x = volume, color = clarity)) +
geom_point(alpha = 0.1) +
scale_color_brewer(type = 'div') +
facet_wrap(~cut) +
coord_trans(y = "log10")
ggplot(subset(diamonds, quantile(volume) <= 0.99), aes(y = price, x = volume, color = clarity)) +
geom_point(alpha = 0.1) +
scale_color_brewer(type = 'div') +
facet_wrap(~cut) +
coord_trans(y = "log10")
ggplot(subset(diamonds, quantile(volume) <= 0.99), aes(y = price, x = volume, color = clarity)) +
geom_point(alpha = 0.1) +
scale_color_brewer(type = 'div') +
coord_trans(y = "log10")
ggplot(subset(diamonds, quantile(volume) <= 0.99), aes(y = price, x = volume, color = clarity)) +
geom_point(alpha = 1) +
scale_color_brewer(type = 'div') +
coord_trans(y = "log10")
pf$prop_initiated <- pf$friendships_initiated / pf$friend_count
ggplot(pf, aes(x = prop_initiated, y = tenure, color = year_joined.bucket)) +
geom_line(fun.y = median)
ggplot(pf, aes(x = prop_initiated, y = tenure, color = year_joined.bucket), fun.y = median) +
geom_line(fun.y = median)
ggplot(pf, aes(x = prop_initiated, y = tenure, color = year_joined.bucket), fun.y = median) +
geom_line()
ggplot(pf, aes(x = prop_initiated, y = tenure, color = year_joined.bucket), fun.y = median) +
geom_line(stat = "summary")
ggplot(pf, aes(x = median(prop_initiated), y = tenure, color = year_joined.bucket)) +
geom_line()
ggplot(pf, aes(x = prop_initiated, y = tenure, color = year_joined.bucket), fun.y = median) +
geom_line()
ggplot(pf, aes(y = prop_initiated, x = tenure, color = year_joined.bucket), fun.y = median) +
geom_line()
ggplot(subset(pf, !is.na(year_joined.bucket)),
aes(y = prop_initiated, x = tenure, color = year_joined.bucket),
fun.y = median) +
geom_line()
ggplot(subset(pf, !is.na(year_joined.bucket)),
aes(y = prop_initiated, x = tenure, color = year_joined.bucket),
fun.y = median, stat = "summary") +
geom_line()
ggplot(subset(pf, !is.na(year_joined.bucket)),
aes(y = prop_initiated, x = tenure, color = year_joined.bucket),
fun.y = median, stat = "summary") +
geom_line(fun.y = median, stat = "summary")
ggplot(subset(pf, !is.na(year_joined.bucket)),
aes(y = prop_initiated, x = tenure, color = year_joined.bucket),
fun.y = median, stat = "summary") +
geom_smooth(fun.y = median, stat = "summary")
ggplot(subset(pf, !is.na(year_joined.bucket)),
aes(y = prop_initiated, x = 5*(floor(tenure/5)), color = year_joined.bucket),
fun.y = median, stat = "summary") +
geom_line(fun.y = median, stat = "summary")
ggplot(subset(pf, !is.na(year_joined.bucket)),
aes(y = prop_initiated, x = 10*(floor(tenure/10)), color = year_joined.bucket),
fun.y = median, stat = "summary") +
geom_line(fun.y = median, stat = "summary")
mean(subset(pf, year_joined.bucket == (2012,2014])$prop_initiated)
View(pf)
mean(subset(pf, year_joined.bucket == "(2012,2014]")$prop_initiated)
pf %>% filter(year_joined.bucket == "(2012,2014]") %>% mean(prop_initiated)
mean(subset(pf, year_joined.bucket == "(2012,2014]", !is.nan(prop_initiated))$prop_initiated)
pf %>% filter(year_joined.bucket == "(2012,2014]", !is.nan(prop_initiated) %>% mean(prop_initiated)
pf %>% filter(year_joined.bucket == "(2012,2014]", !is.nan(prop_initiated)) %>% mean(prop_initiated)
pf %>% filter(year_joined.bucket == "(2012,2014]", !is.nan(prop_initiated)) %>% mean(prop_initiated)
mean(pf$prop_initiated)
mean(subset(pf, !is.nan(prop_initiated))$prop_initiated)
mean(subset(pf, !is.nan(prop_initiated), year_joined.bucket == "(2012,2014]")$prop_initiated)
mean(subset(pf, !is.nan(prop_initiated), year_joined.bucket = "(2012,2014]")$prop_initiated)
pf_1 <- subset(pf, !is.nan(prop_initiated)
pf_1 <- filter(pf, year_joined.bucket == "(2012,2014]")
pf_1 <- filter(pf, year_joined.bucket = "(2012,2014]")
pf_1 <- filter(pf, year_joined.bucket == "(2012,2014]")
View(pf_1)
pf_1 <- subset(pf, !is.nan(prop_initiated)
pf_1 <- filter(pf_1, year_joined.bucket == "(2012,2014]")
pf_1 <- subset(pf, !is.nan(prop_initiated))
pf_1 <- filter(pf_1, year_joined.bucket == "(2012,2014]")
mean(pf_1$prop_initiated)
ggplot(pf, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
facet_wrap(~clarity)
ggplot(pf, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
facet_wrap(~clarity)
ggplot(pf, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
ggplot(diamonds, aes(x = cut, y = price/carat, color = color)) +
geom_point() +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
